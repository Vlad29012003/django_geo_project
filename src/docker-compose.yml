version: "3.8"

services:
  db:
    image: postgis/postgis:latest
    environment:
    - POSTGRES_DB=${POSTGRES_DB}
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - app-network

  pgbouncer:
    image: edoburu/pgbouncer
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/geodb
    ports:
      - "6433:6432"
    depends_on:
      - db

    volumes:
      - ./pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
      - ./userlist.txt:/etc/pgbouncer/userlist.txt:ro


  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      bash -c "sleep 10 && 
                python manage.py makemigrations &&
                python manage.py migrate &&
                python manage.py collectstatic --noinput &&
                gunicorn core.wsgi:application --bind 0.0.0.0:8000 --timeout 10000 --limit-request-field_size 16384 --workers 2"

    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - ./logs:/app/logs
    ports:
      - "8001:8000"
    depends_on:
      - db
      - pgbouncer
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DEBUG=${DEBUG}
    networks:
      - app-network
    env_file:
      - .env



volumes:
  postgres_data:
  static_volume:


networks:
  app-network:
    driver: bridge